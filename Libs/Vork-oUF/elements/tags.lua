---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by flori.
--- DateTime: 01/11/2020 14:19
---

local _, ns = ...
local oUF = ns.oUF

oUF.Tags.Events['Vorkui:PerHP'] = 'UNIT_HEALTH UNIT_MAXHEALTH'
oUF.Tags.Methods['Vorkui:PerHP'] = function(unit)
    local max = UnitHealthMax(unit)
    local cur = UnitHealth(unit)
    if (max == 0) then
        return 0
    elseif cur == max then
        return ''
    else
        return math.floor(cur / max * 100 + .5)
    end
end

oUF.Tags.Events['Vorkui:HealthColor'] = 'UNIT_HEALTH'
oUF.Tags.Methods['Vorkui:HealthColor'] = function(unit, _, smooth)
    local cur, max = UnitHealth(unit), UnitHealthMax(unit)
    if smooth and smooth == 'true' then
        r, g, b = oUF.ColorGradient(_, cur or 1, max or 1, unpack(oUF.colors.smoothGradient or oUF.colors.smooth))
        return Hex(r, g, b)
    else
        return Hex(1, 1, 1)
    end

end

oUF.Tags.Events['Vorkui:AbsorbColor'] = 'UNIT_ABSORB_AMOUNT_CHANGED UNIT_HEAL_ABSORB_AMOUNT_CHANGED'
oUF.Tags.Methods['Vorkui:AbsorbColor'] = function(unit)

    local curDamageAbsorb = UnitGetTotalAbsorbs(unit)
    local curHealAbsorb = UnitGetTotalHealAbsorbs(unit)

    if curDamageAbsorb > curHealAbsorb then
        return Hex(unpack(oUF.colors.absorbs.damageAbsorb or {1,1,1}))
    else
        return Hex(unpack(oUF.colors.absorbs.healAbsorb or {1,1,1}))
    end
end

oUF.Tags.Events['Vorkui:Absorb'] = 'UNIT_ABSORB_AMOUNT_CHANGED UNIT_HEAL_ABSORB_AMOUNT_CHANGED'
oUF.Tags.Methods['Vorkui:Absorb'] = function(unit)
    local curDamageAbsorb = UnitGetTotalAbsorbs(unit)
    local curHealAbsorb = UnitGetTotalHealAbsorbs(unit)

    if curDamageAbsorb > curHealAbsorb then
        return curDamageAbsorb-curHealAbsorb
    else
        return curHealAbsorb-curDamageAbsorb
    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by f.guilleminot.
--- DateTime: 31/12/2020 09:32
---

local V, C = select(2, ...):unpack()

local Themes = V.Themes
local Profiles = V.Profiles

local function registers(module, submodule, object, table)
    for _, item in ipairs(table) do
        Profiles:RegisterOption(module, submodule, object, unpack(item))
    end
end

local function absorbOption(module, submodule)
    local data = {
        { nil, 'boolean', 'Enable', true },
        --TRANSFORM
        { nil, 'table', 'Size', 232, 8  },
        { nil, 'table', 'Point', 'TOPRIGHT', nil, 'TOPRIGHT' },
        ----SLANT
        { 'SlantingSettings', 'boolean', 'Enable', true },
        { 'SlantingSettings', 'boolean', 'IgnoreBackground', true},
        { 'SlantingSettings', 'boolean', 'FillInverse', true },
        { 'SlantingSettings', 'layer', 'StaticLayer', 'BACKGROUND' },
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiBubbles', 'ARTWORK' },
        { 'Rendering', 'color', nil, { 0, 0, 0, 1 }, 'BACKGROUND', 1 },
        --TAGS
        { 'Value', 'layer', 'Layer', 'OVERLAY' },
        { 'Value', 'font', 'Font', 'ValueFont' },
        { 'Value', 'table', 'Point', "TOPLEFT", nil, "TOP" },
        { 'Value', 'string', 'Tag', '[Vorkui:HealthColor][Vorkui:Absorb]' },
    }

    registers(module, submodule, 'Absorb', data)

end

local function healthOption(module, submodule)
    local data = {
        --TRANSFORM
        { nil, 'table', 'Size',  256, 32  },
        { nil, 'table', 'Point',  'TOPRIGHT', 'Absorb', 'BOTTOMRIGHT', -8, 0  },
        ----SLANT
        { 'SlantingSettings', 'boolean', 'Enable', true },
        { 'SlantingSettings', 'boolean', 'IgnoreBackground', true},
        { 'SlantingSettings', 'layer', 'StaticLayer', 'BACKGROUND' },
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiDefault', 'ARTWORK' },
        { 'Rendering', 'texture', nil, 'VorkuiBackground', 'BACKGROUND', 1 },
        { 'Rendering', 'texture', nil, 'VorkuiBorder', 'OVERLAY' },
        --TAGS
        { 'Value', 'layer', 'Layer', 'OVERLAY' },
        { 'Value', 'font', 'Font', 'ValueFont' },
        { 'Value', 'table', 'Point', 'TOPRIGHT', nil, 'TOP'  },
        { 'Value', 'string', 'Tag', '[Vorkui:HealthColor(false)][Vorkui:Deficit:Curhp]' },

        { 'Percent', 'layer', 'Layer', 'OVERLAY' },
        { 'Percent', 'font', 'Font', 'BigValueFont' },
        { 'Percent', 'table', 'Point', 'BOTTOMRIGHT', nil, 'BOTTOMRIGHT' },
        { 'Percent', 'string', 'Tag', '[Vorkui:HealthColor(true)][Vorkui:PerHP]' },
    }

    registers(module, submodule, 'Health', data)

end

local function healthPredictionOption(module, submodule)
    local data = {
        ----SLANT
        { 'SlantingSettings', 'boolean', 'Enable', true },
        { 'SlantingSettings', 'boolean', 'IgnoreBackground', true},
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiDefault', 'ARTWORK', 1 },
        { 'Rendering', 'texture', nil, 'VorkuiBorder', 'OVERLAY' },
    }

    registers(module, submodule, 'HealthPrediction', data)

end

local function castbarOption(module, submodule)
    local data = {
        --TRANSFORM
        { nil, 'table', 'Size', 300, 20 },
        { nil, 'table', 'Point', 'TOP', nil, 'BOTTOM', 0, -2 },
        { nil, 'color', 'StatusBarColor', { 0, 0.5, 1, 1 }  },
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiDefault', 'ARTWORK' },
        { 'Rendering', 'texture', nil, 'VorkuiBackground', 'BACKGROUND', 1 },
        { 'Rendering', 'texture', nil, 'VorkuiBorder', 'OVERLAY' },
        --SPARK
        { 'Spark', 'layer', 'Layer', 'OVERLAY' },
        { 'Spark', 'table', 'Size', 20, 20 },
        { 'Spark', 'blend', 'BlendMode', 'ADD' },
        { 'CastSettings', 'texture', 'AtlasName', 'Muzzle' },
        { 'CastSettings', 'table', 'Point', 'RIGHT', nil, 'RIGHT', 5, 0 },
        { 'ChannelSettings', 'texture', 'AtlasName', 'Spark' },
        { 'ChannelSettings', 'table', 'Point', 'CENTER', nil, 'RIGHT' },
        --TAGS
        { 'Time', 'layer', 'Layer', 'OVERLAY' },
        { 'Time', 'font', 'Font', 'DurationFont' },
        { 'Time', 'table', 'Point', 'RIGHT' },

        { 'Text', 'layer', 'Layer', 'OVERLAY' },
        { 'Text', 'font', 'Font', 'NormalFont' },
        { 'Text', 'table', 'Point', 'CENTER' },

        --ICON
        { 'Icon', 'table', 'Size', 20, 20 },
        { 'Icon', 'table', 'Point', 'TOPLEFT' },

        --SHIELD
        { 'Shield', 'table', 'Size', 20, 20 },
        { 'Shield', 'table', 'Point', 'LEFT', 'Text' },
        { 'Shield', 'texture', 'Texture', 'GlobalIcon' },
        { 'Shield', 'string', 'TexCoord', 'DEFENSE' },

        --SAFEZONE
        { 'SafeZone', 'layer', 'Layer', 'OVERLAY' },
        { 'SafeZone', 'blend', 'BlendMode', 'ADD' },
        { 'SafeZone', 'color', 'VertexColor', { 255/255, 246/255, 0, 0.75 } },
    }

    registers(module, submodule, 'CastBar', data)

end

local function nameOption(module, submodule)
    local data = {
        { nil, 'boolean', 'Enable', true },
        --TAGS
        { nil, 'layer', 'Layer', 'OVERLAY' },
        { nil, 'font', 'Font', 'NameFont' },
        { nil, 'table', 'Point', 'BOTTOMLEFT', nil, 'TOPLEFT', 0, 2 },
        { nil, 'string', 'Tag', '[classification] [name] [difficulty][level]' },
    }

    registers(module, submodule, 'Name', data)
end

local function powerOption(module, submodule)
    local data = {
        { nil, 'boolean', 'Enable', true },
        --TRANSFORM
        { nil, 'table', 'Size', 235, 10 },
        { nil, 'table', 'Point', 'TOPLEFT', 'Health', 'BOTTOMLEFT', -10, 0 },
        ----SLANT
        { 'SlantingSettings', 'boolean', 'Enable', true },
        { 'SlantingSettings', 'boolean', 'IgnoreBackground', true},
        { 'SlantingSettings', 'layer', 'StaticLayer', 'BACKGROUND' },
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiDefault', 'ARTWORK' },
        { 'Rendering', 'texture', nil, 'VorkuiBorder', 'OVERLAY' },
        --TAGS
        { 'Value', 'layer', 'Layer', 'OVERLAY' },
        { 'Value', 'font', 'Font', 'StackFont' },
        { 'Value', 'table', 'Point', 'BOTTOM' },
        { 'Value', 'string', 'Tag', '[powercolor][missingpp]' },
    }

    registers(module, submodule, 'Power', data)

end

local function powerPredictionOption(module, submodule)
    local data = {
        ----SLANT
        { 'SlantingSettings', 'boolean', 'Enable', true },
        { 'SlantingSettings', 'boolean', 'IgnoreBackground', true},
        { 'SlantingSettings', 'boolean', 'FillInverse', true },
        --RENDERING
        { 'Rendering', 'texture', nil, 'VorkuiDefault', 'ARTWORK', 1 },
        { 'Rendering', 'texture', nil, 'VorkuiBorder', 'OVERLAY' },
    }

    registers(module, submodule, 'PowerPrediction', data)

end

local function portraitOption(module, submodule)
    local data = {
        { nil, 'boolean', 'Enable', true },
        --TRANSFORM
        { nil, 'table', 'Size', 49, 49 },
        { nil, 'table', 'Point', 'TOPLEFT', nil, 'TOPLEFT' },
        { nil, 'string', 'Type', '3D' },
        { nil, 'layer', 'ModelDrawLayer', 'BACKGROUND' },

        { 'PostUpdate', 'table', 'Position', { 0.2, 0, 0 } },
        { 'PostUpdate', 'number', 'Rotation', - math.pi/5 },
        { 'PostUpdate', 'number', 'CamDistance', 2 },
    }

    registers(module, submodule, 'Portrait', data)

end

local function indicatorOption(module, submodule, indicator, size, point, texture, texcoord, vertexcolor, gradientalpha, blendmode)
    local data = {
        { nil, 'table', 'Size', unpack(size) },
        { nil, 'table', 'Point', unpack(point) },
        { nil, 'texture', 'Texture', texture },
        { nil, 'string', 'TexCoord', texcoord },
        { nil, 'color', 'VertexColor', vertexcolor },
        { nil, 'table', 'GradientAlpha', gradientalpha },
        { nil, 'blend', 'BlendMode', blendmode },
    }

    registers(module, submodule, indicator, data)
end

--(module, submodule, object, component, type, optionName, defaultValue)
Themes["Default"].SetPlayerProfile = function()

    local module = 'UnitFrames'
    local submodule = 'PlayerLayout'

    --Global OPTION
    Profiles:RegisterOption(module, submodule, nil, nil, 'table', 'Size', 300, 62)
    Profiles:RegisterOption(module, submodule, nil, nil, 'table', 'Point', "CENTER", 'UIParent', "CENTER", -450, -350)
    --HEALTH OPTION
    healthOption(module, submodule)
    healthPredictionOption(module, submodule)
    absorbOption(module, submodule)
    powerOption(module, submodule)
    powerPredictionOption(module, submodule)
    portraitOption(module, submodule)

    indicatorOption(module, submodule, 'ClassIndicator',
            {16, 16},
            { 'TOPLEFT', 'Frame', 'TOPRIGHT', -4, -2 },
            'ClassIcon',
             select(2, UnitClass("player")),
             nil,
            nil,
            nil
    )

    indicatorOption(module, submodule, 'RaidIndicator',
            {16, 16},
            { 'LEFT', 'Health', 'LEFT', 10, 0 },
            'RaidIcon',
            nil,
            nil,
            nil,
            nil
    )

    indicatorOption(module, submodule, 'LeaderIndicator',
            { 64/4, 53/4 },
            { 'RIGHT', 'Frame', 'LEFT' },
            'GlobalIcon',
            'LEADER',
            { 163/255, 220/255, 255/255 },
            nil,
            nil
    )

    indicatorOption(module, submodule, 'RestingIndicator',
            { 64/2, 60/2 },
            { 'BOTTOMRIGHT', 'Frame', 'BOTTOMRIGHT' },
            'GlobalIcon',
            'RESTING',
            nil,
            { "VERTICAL", 163/255, 220/255, 255/255, 0.75, 0, 0, 0, 1 },
            'ADD'
    )

    indicatorOption(module, submodule, 'CombatIndicator',
            { 39/3, 64/3 },
            { 'BOTTOMRIGHT', 'Frame', 'TOPRIGHT' },
            'GlobalIcon',
            'MAELSTROM',
            nil,
            { "VERTICAL", 255/255, 246/255, 0/255, 0.75, 255/255, 50/255, 0/255, 1 },
            'ADD'
    )

    indicatorOption(module, submodule, 'DeadOrGhostIndicator',
            { 40, 40 },
            { 'BOTTOMRIGHT', 'Frame', 'BOTTOMRIGHT' },
            'Status',
            'DIED',
            { 255/255, 68/255, 91/255 },
            nil,
            nil
    )

    indicatorOption(module, submodule, 'ResurrectIndicator',
            { 40, 40 },
            { 'BOTTOMRIGHT', 'Frame', 'BOTTOMRIGHT', 0, 0 },
            'Status',
            'RESURRECT',
            { 30/255, 223/255, 100/255 },
            nil,
            nil
    )

    indicatorOption(module, submodule, 'SummonIndicator',
            { 32, 32 },
            { 'CENTER', 'Health', 'CENTER' },
            'Phasing',
            'SUMMON',
            { 0/255, 204/255, 255/255 },
            nil,
            nil
    )

    indicatorOption(module, submodule, 'PhaseIndicator',
            { 32, 32 },
            { 'CENTER', 'Health', 'CENTER' },
            'Phasing',
            'PHASE',
            { 0/255, 204/255, 255/255 },
            nil,
            nil
    )

    nameOption(module, submodule)
    castbarOption(module, submodule)

    --Profiles:PrintProfile()
    Profiles:UpdateDB()
    --ABSORB OPTION
    --POWER OPTION
    --PORTRAIT OPTION
    --INDICATORS OPTION
    --CASTBAR OPTION
    --TAGS OPTION
    --FONT OPTION

end